
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <script src="https://unpkg.com/jquery"></script>
  <script src="https://unpkg.com/vue"></script>
  <script src="https://unpkg.com/vue-resource"></script>
</head>
<body>

  <h3> Vue Templating served by Vapor </h3>
  <div>
    <p>Welcome to the Vapor n Vue example application. Your ip address is #(ipAddress)</p>
  </div>

  <h3> Declaritive Rendering </h3>
  <div id="app">
    <p>{{ message }}</p>
  </div>

  <div id="app-2">
    <span v-bind:title="message">
      Hover your mouse over me for a few seconds
      to see my dynamically bound title!
    </span>
  </div>

  <h3>Conditionals and Loops</h3>
  <div id="app-3">
    <p v-if="seen"><button v-on:click="hideMessage">Now you see me</button></p>
  </div>

  <div id="app-4">
    <ol>
      <li v-for="todo in todos">
        {{ todo.text }}
      </li>
    </ol>
    <button v-on:click="newItem">New Item</button>
  </div>

  <h3>Handling User Input</h3>
  <div id="app-5">
    <p>{{ message }}</p>
    <button v-on:click="reverseMessage">Reverse Message</button>
  </div>

  <div id="app-6">
    <p>{{ message }}</p>
    <input v-model="message">
  </div>

  <h3>Composing with Components</h3>
  <div id="app-7">
    <ol>
        <!--
          Now we provide each todo-item with the todo object
          it's representing, so that its content can be dynamic.
          We also need to provide each component with a "key",
          which will be explained later.
        -->
        <todo-item
        v-for="item in groceryList"
        v-bind:todo="item"
        v-bind:key="item.id">
      </todo-item>
    </ol>
  </div>

  <div id="homepage">
    {{ myApiData }}
  </div>

  <script src="static/js/app.js"></script>

</body>

</html>
